# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          docker build -t webpage .
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.MY_DOCKER_USER }}
          password: ${{ secrets.MY_DOCKER_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag webpage ${MY_DOCKER_USER}/webpage:latest
          docker push ${MY_DOCKER_USER}/webpage:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.MY_EC2_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${MY_EC2_USER}@${MY_EC2} << EOF
            docker pull ${MY_DOCKER_USER}/webpage:latest
            docker stop $(docker ps -q --filter ancestor=${MY_DOCKER_USER}/webpage:latest)
            docker rm $(docker ps -aq --filter ancestor=${MY_DOCKER_USER}/webpage:latest)
            docker run -d -p 80:80 ${MY_DOCKER_USER}/webpage:latest
          EOF
